using System;
using System.Text;
using static AntiDebugLib.Native.Kernel32;

namespace AntiDebugLib.Prevention.Exploits
{
    /// <summary>
    /// <list type="bullet">
    /// <item>
    /// AntiCrack-DotNet :: https://github.com/AdvDebug/AntiCrack-DotNet/blob/91872f71c5601e4b037b713f31327dfde1662481/AntiCrack-DotNet/AntiDebug.cs#L238
    /// </item>
    /// </list>
    /// </summary>
    public class MalformedOutputDebugString : CheckBase
    {
        public override string Name => "Malformed OutputDebugString (Ollydbg Crasher)";

        public override CheckReliability Reliability => CheckReliability.Bad;

        private readonly char[] formatChars = new char[] { 'd', 'f', 'p', 'x' };

        public override bool PreventActive()
        {
            var random = new Random();
            var count = random.Next(32);
            var builder = new StringBuilder(count * 2);
            for (var i = 0; i < count; i++)
                builder.Append('%').Append(formatChars[random.Next(formatChars.Length)]);

            OutputDebugStringA(builder.ToString());
            return true;
        }
    }
}
